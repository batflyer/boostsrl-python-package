["0.5.2", ["10", "cancer", "[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]", "-1.8", "cancer"], ["setParam: stringsAreCaseSensitive = true.\n\nuseStdLogicNotation: true.\n\n\n(smokes(a) => cancer(a, 0.8581489350995121)).\ncancer(_, 0.19148226843284552) /* #neg=2 #pos=1 */ .\n", "setParam: stringsAreCaseSensitive = true.\n\nuseStdLogicNotation: true.\n\n\n(smokes(a) => cancer(a, 0.7194734122109545)).\ncancer(_, 0.16653882456488175) /* #neg=2 #pos=1 */ .\n", "setParam: stringsAreCaseSensitive = true.\n\nuseStdLogicNotation: true.\n\n\n(smokes(a) => cancer(a, 0.5553664367462845)).\ncancer(_, 0.1420942428155648) /* #neg=2 #pos=1 */ .\n", "setParam: stringsAreCaseSensitive = true.\n\nuseStdLogicNotation: true.\n\n\n(smokes(a) => cancer(a, 0.41751358415830997)).\ncancer(_, 0.11914890490746428) /* #neg=2 #pos=1 */ .\n", "setParam: stringsAreCaseSensitive = true.\n\nuseStdLogicNotation: true.\n\n\n(smokes(a) => cancer(a, 0.32071184716014967)).\ncancer(_, 0.09841340278401862) /* #neg=2 #pos=1 */ .\n", "setParam: stringsAreCaseSensitive = true.\n\nuseStdLogicNotation: true.\n\n\n(smokes(a) => cancer(a, 0.25517224256948945)).\ncancer(_, 0.08026654944252243) /* #neg=2 #pos=1 */ .\n", "setParam: stringsAreCaseSensitive = true.\n\nuseStdLogicNotation: true.\n\n\n(smokes(a) => cancer(a, 0.20975771563253554)).\ncancer(_, 0.06479591611329232) /* #neg=2 #pos=1 */ .\n", "setParam: stringsAreCaseSensitive = true.\n\nuseStdLogicNotation: true.\n\n\n(smokes(a) => cancer(a, 0.17709649774527736)).\ncancer(_, 0.05187916934404054) /* #neg=2 #pos=1 */ .\n", "setParam: stringsAreCaseSensitive = true.\n\nuseStdLogicNotation: true.\n\n\n(smokes(a) => cancer(a, 0.15274385809367097)).\ncancer(_, 0.04126932998424626) /* #neg=2 #pos=1 */ .\n", "setParam: stringsAreCaseSensitive = true.\n\nuseStdLogicNotation: true.\n\n\n(smokes(a) ^ ! => cancer(a, 0.13400703000801117)).\n(! => cancer(_, 0.032663748734830134)).\n"], {"background": {"modes": ["friends(+Person,-Person).", "friends(-Person,+Person).", "smokes(+Person).", "cancer(+Person)."], "node_size": 2, "max_tree_depth": 3, "number_of_clauses": 100, "number_of_cycles": 100, "line_search": false, "recursion": false, "use_std_logic_variables": true, "use_prolog_variables": false, "load_all_libraries": false, "load_all_basic_modes": false}, "target": "cancer", "n_estimators": 10, "node_size": 2, "max_tree_depth": 3}]
